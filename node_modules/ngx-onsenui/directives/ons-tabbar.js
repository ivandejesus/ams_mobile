var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ViewContainerRef, ComponentFactoryResolver, Directive, ElementRef, Type, Input, Output, EventEmitter, NgZone } from '@angular/core';
import * as ons from 'onsenui';
/**
 * @element ons-tabbar
 * @directive OnsTabbar
 * @selector ons-tabbar
 * @description
 *   [en]Angular directive for `<ons-tabbar>` component.[/en]
 *   [ja]`<ons-tabbar>`要素のためのディレクティブです。[/ja]
 * @example
 *   @Component({
 *     selector: 'ons-page',
 *     template: `
 *       <ons-toolbar>
 *         <div class="center">Page</div>
 *       </ons-toolbar>
 *       <div class="content">...</div>
 *     `
 *   })
 *   class PageComponent {
 *   }
 *
 *   @Component({
 *     selector: 'app',
 *     template: `
 *     <ons-tabbar swipeable (swipe)="onSwipe($event)">
 *       <div class="tabbar__content"></div>
 *       <div class="tabbar">
 *         <ons-tab label="Page1" icon="ion-home" [page]="page" active></ons-tab>
 *         <ons-tab label="Page2" icon="ion-help" [page]="page"></ons-tab>
 *         <ons-tab label="Page3" icon="ion-stop" [page]="page"></ons-tab>
 *       </div>
 *     </ons-tabbar>
 *     `
 *   })
 *   export class AppComponent {
 *     page = PageComponent
 *
 *     onSwipe(event) {
 *       console.log(event);
 *     }
 *   }
 */
var OnsTabbar = /** @class */ (function () {
    function OnsTabbar(_elementRef) {
        var _this = this;
        this._elementRef = _elementRef;
        /**
         * @output swipe
         * @param {Object} $event
         * @param {number} $event.index
         * @param {Object} $event.options
         * @desc
         *   [en]Triggers when the tabbar is swiped.[/en]
         *   [ja]`<ons-tabbar>`がスワイプされた時に発火します。[/ja]
         */
        this._swipe = new EventEmitter();
        this._element = _elementRef.nativeElement;
        this._element.onSwipe = function (index, options) { return _this._swipe.emit({ index: index, options: options }); };
    }
    __decorate([
        Output('swipe'),
        __metadata("design:type", Object)
    ], OnsTabbar.prototype, "_swipe", void 0);
    OnsTabbar = __decorate([
        Directive({
            selector: 'ons-tabbar'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], OnsTabbar);
    return OnsTabbar;
}());
export { OnsTabbar };
/**
 * @element ons-tab
 * @directive OnsTab
 * @selector ons-tab
 * @description
 *   [en]Angular directive for `<ons-tab>` component.[/en]
 *   [ja]`<ons-tab>`要素のためのディレクティブです。[/ja]
 * @example
 *   @Component({
 *     selector: 'ons-page',
 *     template: `
 *       <ons-toolbar>
 *         <div class="center">Page</div>
 *       </ons-toolbar>
 *       <div class="content">...</div>
 *     `
 *   })
 *   class PageComponent {
 *   }
 *
 *   @Component({
 *     selector: 'app',
 *     template: `
 *     <ons-tabbar>
 *       <div class="tabbar__content"></div>
 *       <div class="tabbar">
 *         <ons-tab label="Page1" icon="ion-home" [page]="page" active></ons-tab>
 *         <ons-tab label="Page2" icon="ion-help" [page]="page"></ons-tab>
 *         <ons-tab label="Page3" icon="ion-stop" [page]="page"></ons-tab>
 *       </div>
 *     </ons-tabbar>
 *     `
 *   })
 *   export class AppComponent {
 *     page = PageComponent
 *   }
 */
var OnsTab = /** @class */ (function () {
    function OnsTab(_elementRef, _viewContainer, _resolver, _zone) {
        this._elementRef = _elementRef;
        this._viewContainer = _viewContainer;
        this._resolver = _resolver;
        this._zone = _zone;
        this._pageComponent = null;
        // set up ons-tab's page loader
        this._elementRef.nativeElement.pageLoader = this._createPageLoader();
    }
    Object.defineProperty(OnsTab.prototype, "page", {
        /**
         * @input page
         * @type {Type<any>}
         * @desc
         *   [en]Specify the page component that is displayed when the tab is active.[/en]
         *   [ja]読み込むページコンポーネントを指定します。[/ja]
         */
        set: function (pageComponentType) {
            this._elementRef.nativeElement.page = pageComponentType;
        },
        enumerable: true,
        configurable: true
    });
    OnsTab.prototype._createPageLoader = function () {
        var _this = this;
        var PageLoader = ons.PageLoader;
        return new PageLoader(function (_a, done) {
            var page = _a.page, parent = _a.parent;
            _this._zone.run(function () {
                var factory = _this._resolver.resolveComponentFactory(page);
                var pageComponentRef = _this._viewContainer.createComponent(factory, 0);
                if (_this._pageComponent) {
                    _this._pageComponent.destroy();
                }
                _this._pageComponent = pageComponentRef;
                var pageElement = pageComponentRef.location.nativeElement;
                parent.appendChild(pageElement); // dirty fix to insert in correct position
                done(pageElement);
            });
        }, function () {
            if (_this.hasOwnProperty('_pageComponent')) {
                if (_this._pageComponent) {
                    _this._pageComponent.destroy();
                    _this._pageComponent = null;
                }
            }
        });
    };
    OnsTab.prototype.ngOnDestroy = function () {
        if (this._pageComponent) {
            this._pageComponent.destroy();
            this._pageComponent = null;
        }
    };
    __decorate([
        Input('page'),
        __metadata("design:type", Type),
        __metadata("design:paramtypes", [Type])
    ], OnsTab.prototype, "page", null);
    OnsTab = __decorate([
        Directive({
            selector: 'ons-tab'
        }),
        __metadata("design:paramtypes", [ElementRef,
            ViewContainerRef,
            ComponentFactoryResolver,
            NgZone])
    ], OnsTab);
    return OnsTab;
}());
export { OnsTab };
//# sourceMappingURL=ons-tabbar.js.map