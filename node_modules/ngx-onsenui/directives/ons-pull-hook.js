var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ElementRef, Output, EventEmitter } from '@angular/core';
/**
 * @element ons-pull-hook
 * @directive OnsPullHook
 * @selector ons-pull-hook
 * @description
 *   [en]Angular directive for `<ons-pull-hook>` component.[/en]
 *   [ja]`<ons-pull-hook>`要素のためのAngular2ディレクティブです。[/ja]
 * @example
 *   @Component({
 *     selector: 'app',
 *     template: `
 *     <ons-page>
 *       <ons-toolbar>
 *         <div class="center">Pull Hook</div>
 *       </ons-toolbar>
 *       <div class="content">
 *         <ons-pull-hook height="64px" threshold-height="128px"
 *           (pull)="onPull($event)" (changestate)="onChangeState($event)" (action)="onAction($event)">
 *           {{message}}
 *         </ons-pull-hook>
 *       </div>
 *     </ons-page>
 *     `
 *   })
 *   export class AppComponent {
 *     message: string = 'Pull down to refresh';
 *
 *     onAction($event) {
 *       setTimeout(() => {
 *         $event.done();
 *       }, 1000);
 *     }
 *
 *     onChangeState($event) {
 *       switch ($event.state) {
 *         case 'initial':
 *           this.message = 'Pull down to refresh';
 *           break;
 *         case 'preaction':
 *           this.message = 'Release to refresh';
 *           break;
 *         case 'action':
 *           this.message = 'Loading data...';
 *           break;
 *       }
 *     }
 *
 *     onPull($event) {
 *       console.log($event.ratio);
 *     }
 *
 *   }
 */
var OnsPullHook = /** @class */ (function () {
    function OnsPullHook(_elementRef) {
        var _this = this;
        this._elementRef = _elementRef;
        /**
         * @output action
         * @param {Object} $event
         * @param {Function} $event.done
         * @desc
         *   [en]Triggers when the page is pulled down.[/en]
         *   [ja]`ons-pull-hook`要素のアクションが必要なときに呼び出されます。[/ja]
         */
        this.action = new EventEmitter();
        /**
         * @output changestate
         * @param {Object} $event
         * @param {String} $event.state
         * @desc
         *   [en]Triggers when the state is changed.[/en]
         *   [ja]`ons-pull-hook`要素の状態が変わった時に呼び出されます。[/ja]
         */
        /**
         * @output pull
         * @param {Object} $event
         * @param {Number} $event.ratio
         * @param {Object} $event.options
         * @desc
         *   [en]Triggers whenever the element is pulled.[/en]
         *   [ja]`ons-pull-hook`要素がプルされているときに呼び出されます。[/ja]
         */
        this.pull = new EventEmitter();
        this._element = _elementRef.nativeElement;
        this._element.onAction = function (done) { return _this.action.emit({ done: done }); };
        this._element.onPull = function (ratio, options) { return _this.pull.emit({ ratio: ratio, options: options }); };
    }
    OnsPullHook.prototype.ngOnDestroy = function () {
        this._element.onAction = null;
        this._element = null;
    };
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], OnsPullHook.prototype, "action", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], OnsPullHook.prototype, "pull", void 0);
    OnsPullHook = __decorate([
        Directive({
            selector: 'ons-pull-hook'
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], OnsPullHook);
    return OnsPullHook;
}());
export { OnsPullHook };
//# sourceMappingURL=ons-pull-hook.js.map