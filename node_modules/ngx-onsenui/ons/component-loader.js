var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable, ApplicationRef } from '@angular/core';
var ComponentLoader = /** @class */ (function () {
    function ComponentLoader(appRef) {
        this.appRef = appRef;
    }
    // Load an instance of ComponentRef in app view.
    ComponentLoader.prototype.load = function (componentRef) {
        var _this = this;
        var rootElement = componentRef.location.nativeElement;
        if (this.appRef.attachView) {
            this.appRef.attachView(componentRef.hostView);
            componentRef.onDestroy(function () {
                _this.appRef.detachView(componentRef.hostView);
                if (rootElement.parentNode) {
                    rootElement.parentNode.removeChild(rootElement);
                }
            });
        }
        else {
            if (this.appRef.registerChangeDetector) {
                this.appRef.registerChangeDetector(componentRef.changeDetectorRef);
            }
            componentRef.onDestroy(function () {
                if (_this.appRef.unregisterChangeDetector) {
                    _this.appRef.unregisterChangeDetector(componentRef.changeDetectorRef);
                }
                if (rootElement.parentNode) {
                    rootElement.parentNode.removeChild(rootElement);
                }
            });
        }
        var rootContainer = this.appRef.components[0].location.nativeElement;
        rootContainer.appendChild(rootElement);
    };
    ComponentLoader = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [ApplicationRef])
    ], ComponentLoader);
    return ComponentLoader;
}());
export { ComponentLoader };
//# sourceMappingURL=component-loader.js.map